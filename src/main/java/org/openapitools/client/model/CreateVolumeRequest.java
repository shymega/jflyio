/*
 * Fly Machines API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ApiMachineGuest;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateVolumeRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-31T17:25:53.139932930Z[Europe/London]")
public class CreateVolumeRequest {
  public static final String SERIALIZED_NAME_COMPUTE = "compute";
  @SerializedName(SERIALIZED_NAME_COMPUTE)
  private ApiMachineGuest compute;

  public static final String SERIALIZED_NAME_ENCRYPTED = "encrypted";
  @SerializedName(SERIALIZED_NAME_ENCRYPTED)
  private Boolean encrypted;

  public static final String SERIALIZED_NAME_FSTYPE = "fstype";
  @SerializedName(SERIALIZED_NAME_FSTYPE)
  private String fstype;

  public static final String SERIALIZED_NAME_MACHINES_ONLY = "machines_only";
  @SerializedName(SERIALIZED_NAME_MACHINES_ONLY)
  private Boolean machinesOnly;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_REQUIRE_UNIQUE_ZONE = "require_unique_zone";
  @SerializedName(SERIALIZED_NAME_REQUIRE_UNIQUE_ZONE)
  private Boolean requireUniqueZone;

  public static final String SERIALIZED_NAME_SIZE_GB = "size_gb";
  @SerializedName(SERIALIZED_NAME_SIZE_GB)
  private Integer sizeGb;

  public static final String SERIALIZED_NAME_SNAPSHOT_ID = "snapshot_id";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_ID)
  private String snapshotId;

  public static final String SERIALIZED_NAME_SNAPSHOT_RETENTION = "snapshot_retention";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_RETENTION)
  private Integer snapshotRetention;

  public static final String SERIALIZED_NAME_SOURCE_VOLUME_ID = "source_volume_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_VOLUME_ID)
  private String sourceVolumeId;

  public CreateVolumeRequest() {
  }

  public CreateVolumeRequest compute(ApiMachineGuest compute) {
    this.compute = compute;
    return this;
  }

   /**
   * Get compute
   * @return compute
  **/
  @javax.annotation.Nullable
  public ApiMachineGuest getCompute() {
    return compute;
  }

  public void setCompute(ApiMachineGuest compute) {
    this.compute = compute;
  }


  public CreateVolumeRequest encrypted(Boolean encrypted) {
    this.encrypted = encrypted;
    return this;
  }

   /**
   * Get encrypted
   * @return encrypted
  **/
  @javax.annotation.Nullable
  public Boolean getEncrypted() {
    return encrypted;
  }

  public void setEncrypted(Boolean encrypted) {
    this.encrypted = encrypted;
  }


  public CreateVolumeRequest fstype(String fstype) {
    this.fstype = fstype;
    return this;
  }

   /**
   * Get fstype
   * @return fstype
  **/
  @javax.annotation.Nullable
  public String getFstype() {
    return fstype;
  }

  public void setFstype(String fstype) {
    this.fstype = fstype;
  }


  public CreateVolumeRequest machinesOnly(Boolean machinesOnly) {
    this.machinesOnly = machinesOnly;
    return this;
  }

   /**
   * Get machinesOnly
   * @return machinesOnly
  **/
  @javax.annotation.Nullable
  public Boolean getMachinesOnly() {
    return machinesOnly;
  }

  public void setMachinesOnly(Boolean machinesOnly) {
    this.machinesOnly = machinesOnly;
  }


  public CreateVolumeRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateVolumeRequest region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public CreateVolumeRequest requireUniqueZone(Boolean requireUniqueZone) {
    this.requireUniqueZone = requireUniqueZone;
    return this;
  }

   /**
   * Get requireUniqueZone
   * @return requireUniqueZone
  **/
  @javax.annotation.Nullable
  public Boolean getRequireUniqueZone() {
    return requireUniqueZone;
  }

  public void setRequireUniqueZone(Boolean requireUniqueZone) {
    this.requireUniqueZone = requireUniqueZone;
  }


  public CreateVolumeRequest sizeGb(Integer sizeGb) {
    this.sizeGb = sizeGb;
    return this;
  }

   /**
   * Get sizeGb
   * @return sizeGb
  **/
  @javax.annotation.Nullable
  public Integer getSizeGb() {
    return sizeGb;
  }

  public void setSizeGb(Integer sizeGb) {
    this.sizeGb = sizeGb;
  }


  public CreateVolumeRequest snapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
    return this;
  }

   /**
   * restore from snapshot
   * @return snapshotId
  **/
  @javax.annotation.Nullable
  public String getSnapshotId() {
    return snapshotId;
  }

  public void setSnapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
  }


  public CreateVolumeRequest snapshotRetention(Integer snapshotRetention) {
    this.snapshotRetention = snapshotRetention;
    return this;
  }

   /**
   * Get snapshotRetention
   * @return snapshotRetention
  **/
  @javax.annotation.Nullable
  public Integer getSnapshotRetention() {
    return snapshotRetention;
  }

  public void setSnapshotRetention(Integer snapshotRetention) {
    this.snapshotRetention = snapshotRetention;
  }


  public CreateVolumeRequest sourceVolumeId(String sourceVolumeId) {
    this.sourceVolumeId = sourceVolumeId;
    return this;
  }

   /**
   * fork from remote volume
   * @return sourceVolumeId
  **/
  @javax.annotation.Nullable
  public String getSourceVolumeId() {
    return sourceVolumeId;
  }

  public void setSourceVolumeId(String sourceVolumeId) {
    this.sourceVolumeId = sourceVolumeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVolumeRequest createVolumeRequest = (CreateVolumeRequest) o;
    return Objects.equals(this.compute, createVolumeRequest.compute) &&
        Objects.equals(this.encrypted, createVolumeRequest.encrypted) &&
        Objects.equals(this.fstype, createVolumeRequest.fstype) &&
        Objects.equals(this.machinesOnly, createVolumeRequest.machinesOnly) &&
        Objects.equals(this.name, createVolumeRequest.name) &&
        Objects.equals(this.region, createVolumeRequest.region) &&
        Objects.equals(this.requireUniqueZone, createVolumeRequest.requireUniqueZone) &&
        Objects.equals(this.sizeGb, createVolumeRequest.sizeGb) &&
        Objects.equals(this.snapshotId, createVolumeRequest.snapshotId) &&
        Objects.equals(this.snapshotRetention, createVolumeRequest.snapshotRetention) &&
        Objects.equals(this.sourceVolumeId, createVolumeRequest.sourceVolumeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compute, encrypted, fstype, machinesOnly, name, region, requireUniqueZone, sizeGb, snapshotId, snapshotRetention, sourceVolumeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVolumeRequest {\n");
    sb.append("    compute: ").append(toIndentedString(compute)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    fstype: ").append(toIndentedString(fstype)).append("\n");
    sb.append("    machinesOnly: ").append(toIndentedString(machinesOnly)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    requireUniqueZone: ").append(toIndentedString(requireUniqueZone)).append("\n");
    sb.append("    sizeGb: ").append(toIndentedString(sizeGb)).append("\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("    snapshotRetention: ").append(toIndentedString(snapshotRetention)).append("\n");
    sb.append("    sourceVolumeId: ").append(toIndentedString(sourceVolumeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("compute");
    openapiFields.add("encrypted");
    openapiFields.add("fstype");
    openapiFields.add("machines_only");
    openapiFields.add("name");
    openapiFields.add("region");
    openapiFields.add("require_unique_zone");
    openapiFields.add("size_gb");
    openapiFields.add("snapshot_id");
    openapiFields.add("snapshot_retention");
    openapiFields.add("source_volume_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CreateVolumeRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateVolumeRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateVolumeRequest is not found in the empty JSON string", CreateVolumeRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateVolumeRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateVolumeRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `compute`
      if (jsonObj.get("compute") != null && !jsonObj.get("compute").isJsonNull()) {
        ApiMachineGuest.validateJsonElement(jsonObj.get("compute"));
      }
      if ((jsonObj.get("fstype") != null && !jsonObj.get("fstype").isJsonNull()) && !jsonObj.get("fstype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fstype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fstype").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("snapshot_id") != null && !jsonObj.get("snapshot_id").isJsonNull()) && !jsonObj.get("snapshot_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `snapshot_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("snapshot_id").toString()));
      }
      if ((jsonObj.get("source_volume_id") != null && !jsonObj.get("source_volume_id").isJsonNull()) && !jsonObj.get("source_volume_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_volume_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_volume_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateVolumeRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateVolumeRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateVolumeRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateVolumeRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateVolumeRequest>() {
           @Override
           public void write(JsonWriter out, CreateVolumeRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateVolumeRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateVolumeRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateVolumeRequest
  * @throws IOException if the JSON string is invalid with respect to CreateVolumeRequest
  */
  public static CreateVolumeRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateVolumeRequest.class);
  }

 /**
  * Convert an instance of CreateVolumeRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

