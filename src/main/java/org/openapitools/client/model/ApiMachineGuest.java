/*
 * Fly Machines API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiMachineGuest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-31T17:25:53.139932930Z[Europe/London]")
public class ApiMachineGuest {
  public static final String SERIALIZED_NAME_CPU_KIND = "cpu_kind";
  @SerializedName(SERIALIZED_NAME_CPU_KIND)
  private String cpuKind;

  public static final String SERIALIZED_NAME_CPUS = "cpus";
  @SerializedName(SERIALIZED_NAME_CPUS)
  private Integer cpus;

  public static final String SERIALIZED_NAME_GPU_KIND = "gpu_kind";
  @SerializedName(SERIALIZED_NAME_GPU_KIND)
  private String gpuKind;

  public static final String SERIALIZED_NAME_HOST_DEDICATION_ID = "host_dedication_id";
  @SerializedName(SERIALIZED_NAME_HOST_DEDICATION_ID)
  private String hostDedicationId;

  public static final String SERIALIZED_NAME_KERNEL_ARGS = "kernel_args";
  @SerializedName(SERIALIZED_NAME_KERNEL_ARGS)
  private List<String> kernelArgs;

  public static final String SERIALIZED_NAME_MEMORY_MB = "memory_mb";
  @SerializedName(SERIALIZED_NAME_MEMORY_MB)
  private Integer memoryMb;

  public ApiMachineGuest() {
  }

  public ApiMachineGuest cpuKind(String cpuKind) {
    this.cpuKind = cpuKind;
    return this;
  }

   /**
   * Get cpuKind
   * @return cpuKind
  **/
  @javax.annotation.Nullable
  public String getCpuKind() {
    return cpuKind;
  }

  public void setCpuKind(String cpuKind) {
    this.cpuKind = cpuKind;
  }


  public ApiMachineGuest cpus(Integer cpus) {
    this.cpus = cpus;
    return this;
  }

   /**
   * Get cpus
   * @return cpus
  **/
  @javax.annotation.Nullable
  public Integer getCpus() {
    return cpus;
  }

  public void setCpus(Integer cpus) {
    this.cpus = cpus;
  }


  public ApiMachineGuest gpuKind(String gpuKind) {
    this.gpuKind = gpuKind;
    return this;
  }

   /**
   * Get gpuKind
   * @return gpuKind
  **/
  @javax.annotation.Nullable
  public String getGpuKind() {
    return gpuKind;
  }

  public void setGpuKind(String gpuKind) {
    this.gpuKind = gpuKind;
  }


  public ApiMachineGuest hostDedicationId(String hostDedicationId) {
    this.hostDedicationId = hostDedicationId;
    return this;
  }

   /**
   * Get hostDedicationId
   * @return hostDedicationId
  **/
  @javax.annotation.Nullable
  public String getHostDedicationId() {
    return hostDedicationId;
  }

  public void setHostDedicationId(String hostDedicationId) {
    this.hostDedicationId = hostDedicationId;
  }


  public ApiMachineGuest kernelArgs(List<String> kernelArgs) {
    this.kernelArgs = kernelArgs;
    return this;
  }

  public ApiMachineGuest addKernelArgsItem(String kernelArgsItem) {
    if (this.kernelArgs == null) {
      this.kernelArgs = new ArrayList<>();
    }
    this.kernelArgs.add(kernelArgsItem);
    return this;
  }

   /**
   * Get kernelArgs
   * @return kernelArgs
  **/
  @javax.annotation.Nullable
  public List<String> getKernelArgs() {
    return kernelArgs;
  }

  public void setKernelArgs(List<String> kernelArgs) {
    this.kernelArgs = kernelArgs;
  }


  public ApiMachineGuest memoryMb(Integer memoryMb) {
    this.memoryMb = memoryMb;
    return this;
  }

   /**
   * Get memoryMb
   * @return memoryMb
  **/
  @javax.annotation.Nullable
  public Integer getMemoryMb() {
    return memoryMb;
  }

  public void setMemoryMb(Integer memoryMb) {
    this.memoryMb = memoryMb;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiMachineGuest apiMachineGuest = (ApiMachineGuest) o;
    return Objects.equals(this.cpuKind, apiMachineGuest.cpuKind) &&
        Objects.equals(this.cpus, apiMachineGuest.cpus) &&
        Objects.equals(this.gpuKind, apiMachineGuest.gpuKind) &&
        Objects.equals(this.hostDedicationId, apiMachineGuest.hostDedicationId) &&
        Objects.equals(this.kernelArgs, apiMachineGuest.kernelArgs) &&
        Objects.equals(this.memoryMb, apiMachineGuest.memoryMb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuKind, cpus, gpuKind, hostDedicationId, kernelArgs, memoryMb);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiMachineGuest {\n");
    sb.append("    cpuKind: ").append(toIndentedString(cpuKind)).append("\n");
    sb.append("    cpus: ").append(toIndentedString(cpus)).append("\n");
    sb.append("    gpuKind: ").append(toIndentedString(gpuKind)).append("\n");
    sb.append("    hostDedicationId: ").append(toIndentedString(hostDedicationId)).append("\n");
    sb.append("    kernelArgs: ").append(toIndentedString(kernelArgs)).append("\n");
    sb.append("    memoryMb: ").append(toIndentedString(memoryMb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cpu_kind");
    openapiFields.add("cpus");
    openapiFields.add("gpu_kind");
    openapiFields.add("host_dedication_id");
    openapiFields.add("kernel_args");
    openapiFields.add("memory_mb");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ApiMachineGuest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiMachineGuest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiMachineGuest is not found in the empty JSON string", ApiMachineGuest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiMachineGuest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiMachineGuest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cpu_kind") != null && !jsonObj.get("cpu_kind").isJsonNull()) && !jsonObj.get("cpu_kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cpu_kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cpu_kind").toString()));
      }
      if ((jsonObj.get("gpu_kind") != null && !jsonObj.get("gpu_kind").isJsonNull()) && !jsonObj.get("gpu_kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gpu_kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gpu_kind").toString()));
      }
      if ((jsonObj.get("host_dedication_id") != null && !jsonObj.get("host_dedication_id").isJsonNull()) && !jsonObj.get("host_dedication_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_dedication_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_dedication_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("kernel_args") != null && !jsonObj.get("kernel_args").isJsonNull() && !jsonObj.get("kernel_args").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `kernel_args` to be an array in the JSON string but got `%s`", jsonObj.get("kernel_args").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiMachineGuest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiMachineGuest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiMachineGuest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiMachineGuest.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiMachineGuest>() {
           @Override
           public void write(JsonWriter out, ApiMachineGuest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiMachineGuest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApiMachineGuest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApiMachineGuest
  * @throws IOException if the JSON string is invalid with respect to ApiMachineGuest
  */
  public static ApiMachineGuest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiMachineGuest.class);
  }

 /**
  * Convert an instance of ApiMachineGuest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

